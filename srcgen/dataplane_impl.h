// Autogenerated file (from src/hardware_indep/dataplane_impl.h.py: via hardware_indep/dataplane_impl.h.py), do not modify directly.
// Generator: T4P4S (https://github.com/P4ELTE/t4p4s/)

#pragma once

#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#include <netinet/in.h>

#include "dpdk_lib.h"
#include "actions.h"
#include "backend.h"
#include "util_debug.h"
#include "tables.h"
#include "gen_include.h"

#ifdef T4P4S_P4RT
    #include "PI/proto/pi_server.h"
    #include "p4rt/device_mgr.h"
    extern device_mgr_t *dev_mgr_ptr;
#endif

extern ctrl_plane_backend bg;
extern const char* action_short_names[];
extern const char* action_names[];

void parse_packet(STDPARAMS);
void increase_counter(int counterid, int index);
void set_handle_packet_metadata(packet_descriptor_t* pd, uint32_t portid);

#ifdef T4P4S_STATS
    extern t4p4s_stats_t t4p4s_stats_global;
    extern t4p4s_stats_t t4p4s_stats_per_packet;
#endif

void update_packet(STDPARAMS);

void table_ipv4_lpm_0_key(packet_descriptor_t* pd, uint8_t* key KEYTXTPARAMS);
void table_nexthops_0_key(packet_descriptor_t* pd, uint8_t* key KEYTXTPARAMS);
void ipv4_lpm_0_stats(int action_id, STDPARAMS);
void nexthops_0_stats(int action_id, STDPARAMS);
ENTRY(ipv4_lpm_0)* ipv4_lpm_0_get_default_entry(STDPARAMS);
ENTRY(nexthops_0)* nexthops_0_get_default_entry(STDPARAMS);

typedef struct {
    bool hit;
    int action_run;
} apply_result_t;

void control_egress(STDPARAMS);
void control_ingress(STDPARAMS);
void control_DeparserImpl(STDPARAMS);
void control_verifyChecksum(STDPARAMS);
void control_computeChecksum(STDPARAMS);

apply_result_t ipv4_lpm_0_apply(STDPARAMS);
apply_result_t nexthops_0_apply(STDPARAMS);
#ifdef T4P4S_DEBUG
    void show_params_by_action_id(char* out, int table_id, int action_id, const void* entry);
    
    void ipv4_lpm_0_apply_show_hit_with_key(bool hit, const ENTRY(ipv4_lpm_0)* entry  KEYTXTPARAM, STDPARAMS);
    void ipv4_lpm_0_show_params_set_nhop(char* out, const action_set_nhop_params_t* actpar);
    void ipv4_lpm_0_show_params__drop(char* out, const action__drop_params_t* actpar);
    void ipv4_lpm_0_show_params_NoAction_1(char* out, const action_NoAction_1_params_t* actpar);
    void nexthops_0_apply_show_hit_with_key(bool hit, const ENTRY(nexthops_0)* entry  KEYTXTPARAM, STDPARAMS);
    void nexthops_0_show_params_forward(char* out, const action_forward_params_t* actpar);
    void nexthops_0_show_params__drop_1(char* out, const action__drop_1_params_t* actpar);
    void nexthops_0_show_params_NoAction_2(char* out, const action_NoAction_2_params_t* actpar);
#endif

void table_set_default_action(lookup_table_t* table, ENTRYBASE* entry);
