// Autogenerated file (from src/hardware_indep/common_enums.h.py: via hardware_indep/common_enums.h.py), do not modify directly.
// Generator: T4P4S (https://github.com/P4ELTE/t4p4s/)

// SPDX-License-Identifier: Apache-2.0
// Copyright 2019 Eotvos Lorand University, Budapest, Hungary

#pragma once

#include <stdbool.h>
#include <stdint.h>

#define T4P4S_TYPE_error_error
#define T4P4S_TYPE_enum_CounterType
#define T4P4S_TYPE_enum_MeterType
#define T4P4S_TYPE_enum_HashAlgorithm
#define T4P4S_TYPE_enum_CloneType
#define T4P4S_TYPE_tcp_flags_t
#define T4P4S_TYPE_mac_learn_digest_t
#define T4P4S_TYPE_padded_bool_t
#define T4P4S_TYPE_padded1_t
#define T4P4S_TYPE_padded2_t
#define T4P4S_TYPE_padded3_t
#define T4P4S_TYPE_padded4_t
#define T4P4S_TYPE_padded5_t
#define T4P4S_TYPE_padded6_t
#define T4P4S_TYPE_padded7_t
#define T4P4S_TYPE_padded8_t
#define T4P4S_TYPE_padded9_t
#define T4P4S_TYPE_padded10_t
#define T4P4S_TYPE_padded11_t
#define T4P4S_TYPE_padded12_t
#define T4P4S_TYPE_padded13_t
#define T4P4S_TYPE_padded14_t
#define T4P4S_TYPE_padded15_t
#define T4P4S_TYPE_padded16_t
#define T4P4S_TYPE_padded17_t
#define T4P4S_TYPE_padded18_t
#define T4P4S_TYPE_padded19_t
#define T4P4S_TYPE_padded20_t
#define T4P4S_TYPE_padded21_t
#define T4P4S_TYPE_padded22_t
#define T4P4S_TYPE_padded23_t
#define T4P4S_TYPE_padded24_t
#define T4P4S_TYPE_padded25_t
#define T4P4S_TYPE_padded26_t
#define T4P4S_TYPE_padded27_t
#define T4P4S_TYPE_padded28_t
#define T4P4S_TYPE_padded29_t
#define T4P4S_TYPE_padded30_t
#define T4P4S_TYPE_padded31_t
#define T4P4S_TYPE_padded32_t
#define T4P4S_TYPE_padded33_t
#define T4P4S_TYPE_padded34_t
#define T4P4S_TYPE_padded35_t
#define T4P4S_TYPE_padded36_t
#define T4P4S_TYPE_padded37_t
#define T4P4S_TYPE_padded38_t
#define T4P4S_TYPE_padded39_t
#define T4P4S_TYPE_padded40_t
#define T4P4S_TYPE_padded41_t
#define T4P4S_TYPE_padded42_t
#define T4P4S_TYPE_padded43_t
#define T4P4S_TYPE_padded44_t
#define T4P4S_TYPE_padded45_t
#define T4P4S_TYPE_padded46_t
#define T4P4S_TYPE_padded47_t
#define T4P4S_TYPE_padded48_t
#define T4P4S_TYPE_padded49_t
#define T4P4S_TYPE_padded50_t
#define T4P4S_TYPE_padded51_t
#define T4P4S_TYPE_padded52_t
#define T4P4S_TYPE_padded53_t
#define T4P4S_TYPE_padded54_t
#define T4P4S_TYPE_padded55_t
#define T4P4S_TYPE_padded56_t
#define T4P4S_TYPE_padded57_t
#define T4P4S_TYPE_padded58_t
#define T4P4S_TYPE_padded59_t
#define T4P4S_TYPE_padded60_t
#define T4P4S_TYPE_padded61_t
#define T4P4S_TYPE_padded62_t
#define T4P4S_TYPE_padded63_t
#define T4P4S_TYPE_padded64_t
#define T4P4S_TYPE_headers
typedef enum {
    error_error_NoError,
    error_error_PacketTooShort,
    error_error_NoMatch,
    error_error_StackOutOfBounds,
    error_error_HeaderTooShort,
    error_error_ParserTimeout,
    error_error_ParserInvalidArgument,
} error_error_t;

extern const char* error_value_names_error[7];

typedef enum {
    enum_CounterType_packets,
    enum_CounterType_bytes,
    enum_CounterType_packets_and_bytes,
} enum_CounterType_t;

extern const char* enum_value_names_CounterType[3];

typedef enum {
    enum_MeterType_packets,
    enum_MeterType_bytes,
} enum_MeterType_t;

extern const char* enum_value_names_MeterType[2];

typedef enum {
    enum_HashAlgorithm_crc32,
    enum_HashAlgorithm_crc32_custom,
    enum_HashAlgorithm_crc16,
    enum_HashAlgorithm_crc16_custom,
    enum_HashAlgorithm_random,
    enum_HashAlgorithm_identity,
    enum_HashAlgorithm_csum16,
    enum_HashAlgorithm_xor16,
} enum_HashAlgorithm_t;

extern const char* enum_value_names_HashAlgorithm[8];

typedef enum {
    enum_CloneType_I2E,
    enum_CloneType_E2E,
} enum_CloneType_t;

extern const char* enum_value_names_CloneType[2];

