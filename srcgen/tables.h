// Autogenerated file (from src/hardware_indep/tables.h.py: via hardware_indep/tables.h.py), do not modify directly.
// Generator: T4P4S (https://github.com/P4ELTE/t4p4s/)

#pragma once

#include "stateful_memory.h"
#include "actions.h"

#define ENTRY(tname)    tname ## _entry_t
#define ENTRYBASE       ENTRY(base_table)

typedef base_table_action_t ENTRYBASE;

typedef struct {
    actions_e                     id;
    ipv4_lpm_0_action_params_t params;
} ENTRY(ipv4_lpm_0);

typedef struct {
    actions_e                     id;
    nexthops_0_action_params_t params;
} ENTRY(nexthops_0);

typedef enum {
    TABLE_ipv4_lpm_0,
    TABLE_nexthops_0,
    TABLE_,
} table_name_e;

void exact_add_promote  (table_name_e tableid, uint8_t* key,                ENTRYBASE* entry, bool is_const_entry, bool should_print);
void lpm_add_promote    (table_name_e tableid, uint8_t* key, uint8_t depth, ENTRYBASE* entry, bool is_const_entry, bool should_print);
void ternary_add_promote(table_name_e tableid, uint8_t* key, uint8_t* mask, ENTRYBASE* entry, bool is_const_entry, bool should_print);
void table_setdefault_promote(table_name_e tableid, ENTRYBASE* entry, bool show_info);

//=============================================================================

// Computes the location of the validity field of the entry.
bool* entry_validity_ptr(ENTRYBASE* entry, lookup_table_t* t);
