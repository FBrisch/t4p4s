
# SPDX-License-Identifier: Apache-2.0
# Copyright 2019 Eotvos Lorand University, Budapest, Hungary

# Autogenerated file (from src/hardware_indep/parser_stages.h.py:), do not modify directly.
# Generator: T4P4S (https://github.com/P4ELTE/t4p4s/)

import compiler_common
import re

def add_code(line, indent_level = 0, lineno = None, file = "src/hardware_indep/parser_stages.h.py:"):
    global generated_code

    line_ends = {
        "line_comment": "\n",
        "inline_comment": "",
        "no_comment": "\n",
        "no_comment_inline": "",
    }

    sugar_style = compiler_common.file_sugar_style[-1]

    stripped_line = line.strip()
    no_sugar_on_line = stripped_line.startswith('//') or stripped_line.startswith('# ') or stripped_line == ""

    indent = compiler_common.file_indent_str * indent_level
    if 'inline' in compiler_common.file_sugar_style[-1]:
        indent = ''

    sugared = sugar(no_sugar_on_line, file, lineno, sugar_style)
    line_end = line_ends[sugar_style]
    return f'{indent}{stripped_line}{sugared}{line_end}'


def sugar(no_sugar_on_line, file, lineno, sugar_style):
    if True or no_sugar_on_line or file is None or lineno is None:
        return ""

    if sugar_style == 'line_comment':
        return f" // {file}{lineno}"
    if sugar_style == 'inline_comment':
        return f" /* {file}{lineno} */"
    return ""


generated_code += "// Autogenerated file (from src/hardware_indep/parser_stages.h.py: via hardware_indep/parser_stages.h.py), do not modify directly.\n"
generated_code += "// Generator: T4P4S (https://github.com/P4ELTE/t4p4s/)\n"
generated_code += "\n"

# SPDX-License-Identifier: Apache-2.0 ## src/hardware_indep/parser_stages.h.py:2
# Copyright 2016 Eotvos Lorand University, Budapest, Hungary ## src/hardware_indep/parser_stages.h.py:3

generated_code += add_code("")
from utils.codegen import format_declaration, format_statement, format_expr, format_type, gen_format_type, get_method_call_env ## src/hardware_indep/parser_stages.h.py:5
from compiler_log_warnings_errors import addError, addWarning ## src/hardware_indep/parser_stages.h.py:6
from compiler_common import types, generate_var_name, get_hdrfld_name, unique_everseen ## src/hardware_indep/parser_stages.h.py:7

generated_code += add_code("")
generated_code += add_code(" #pragma once", lineno = 8)

generated_code += add_code("")
generated_code += add_code(" #include \"dpdk_lib.h\"", lineno = 10)
generated_code += add_code(" #include \"util_packet.h\"", lineno = 11)

generated_code += add_code("")
for hdr in sorted(hlir.header_instances.filterfalse(lambda hdr: hdr.urtype.is_metadata), key=lambda hdr: len(hdr.urtype.fields)): ## src/hardware_indep/parser_stages.h.py:14
    generated_code += add_code(' int parser_extract_{}(int vwlen, STDPARAMS);'.format(hdr.name), lineno = 14)
generated_code += add_code(" void cannot_parse_hdr(const char* varwidth_txt, const char* hdr_name, int hdrlen, int vwlen, STDPARAMS);", lineno = 16)
