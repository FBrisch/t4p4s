
# SPDX-License-Identifier: Apache-2.0
# Copyright 2019 Eotvos Lorand University, Budapest, Hungary

# Autogenerated file (from src/hardware_indep/dataplane_show.c.py:), do not modify directly.
# Generator: T4P4S (https://github.com/P4ELTE/t4p4s/)

import compiler_common
import re

def add_code(line, indent_level = 0, lineno = None, file = "src/hardware_indep/dataplane_show.c.py:"):
    global generated_code

    line_ends = {
        "line_comment": "\n",
        "inline_comment": "",
        "no_comment": "\n",
        "no_comment_inline": "",
    }

    sugar_style = compiler_common.file_sugar_style[-1]

    stripped_line = line.strip()
    no_sugar_on_line = stripped_line.startswith('//') or stripped_line.startswith('# ') or stripped_line == ""

    indent = compiler_common.file_indent_str * indent_level
    if 'inline' in compiler_common.file_sugar_style[-1]:
        indent = ''

    sugared = sugar(no_sugar_on_line, file, lineno, sugar_style)
    line_end = line_ends[sugar_style]
    return f'{indent}{stripped_line}{sugared}{line_end}'


def sugar(no_sugar_on_line, file, lineno, sugar_style):
    if True or no_sugar_on_line or file is None or lineno is None:
        return ""

    if sugar_style == 'line_comment':
        return f" // {file}{lineno}"
    if sugar_style == 'inline_comment':
        return f" /* {file}{lineno} */"
    return ""


generated_code += "// Autogenerated file (from src/hardware_indep/dataplane_show.c.py: via hardware_indep/dataplane_show.c.py), do not modify directly.\n"
generated_code += "// Generator: T4P4S (https://github.com/P4ELTE/t4p4s/)\n"
generated_code += "\n"

# SPDX-License-Identifier: Apache-2.0 ## src/hardware_indep/dataplane_show.c.py:2
# Copyright 2016 Eotvos Lorand University, Budapest, Hungary ## src/hardware_indep/dataplane_show.c.py:3

generated_code += add_code("")
from utils.codegen import format_declaration, format_statement, format_expr, format_type, gen_format_type, get_method_call_env ## src/hardware_indep/dataplane_show.c.py:5
from compiler_log_warnings_errors import addError, addWarning ## src/hardware_indep/dataplane_show.c.py:6
from compiler_common import types, generate_var_name, get_hdrfld_name, unique_everseen ## src/hardware_indep/dataplane_show.c.py:7

generated_code += add_code("")
generated_code += add_code(" #include \"dataplane_impl.h\"", lineno = 8)

generated_code += add_code("")
table_infos = [(table, table.short_name + ("/keyless" if table.key_bit_size == 0 else "") + ("/hidden" if table.is_hidden else "")) for table in hlir.tables] ## src/hardware_indep/dataplane_show.c.py:11

generated_code += add_code("")
################################################################################ ## src/hardware_indep/dataplane_show.c.py:13

generated_code += add_code("")
generated_code += add_code(" #ifdef T4P4S_DEBUG", lineno = 14)

generated_code += add_code("", indent_level = 1)
generated_code += add_code("     void show_params_by_action_id(char* out, int table_id, int action_id, const void* entry) {", indent_level = 1, lineno = 16)
for table in hlir.tables: ## src/hardware_indep/dataplane_show.c.py:18
    if 'key' not in table or table.key_bit_size == 0: ## src/hardware_indep/dataplane_show.c.py:19
        generated_code += add_code('         if (table_id == TABLE_{}) {{ sprintf(out, "%s", ""); return; }}'.format(table.name), indent_level = 2, lineno = 19)
        continue ## src/hardware_indep/dataplane_show.c.py:21
    generated_code += add_code('          if (table_id == TABLE_{}) {{'.format(table.name), indent_level = 2, lineno = 22)
    for dbg_action in table.actions: ## src/hardware_indep/dataplane_show.c.py:24
        aoname = dbg_action.action_object.name ## src/hardware_indep/dataplane_show.c.py:25
        generated_code += add_code('              if (action_id == action_{}) {{'.format(aoname), indent_level = 3, lineno = 25)
        generated_code += add_code('                  {}_show_params_{}(out, (action_{}_params_t*)entry);'.format(table.name, aoname, aoname), indent_level = 4, lineno = 26)
        generated_code += add_code("                  return;", indent_level = 4, lineno = 27)
        generated_code += add_code("              }", indent_level = 3, lineno = 28)
    generated_code += add_code("          }", indent_level = 2, lineno = 29)
generated_code += add_code("      }", indent_level = 1, lineno = 30)

generated_code += add_code("", indent_level = 1)
for table in hlir.tables: ## src/hardware_indep/dataplane_show.c.py:34
    if 'key' not in table or table.key_bit_size == 0: ## src/hardware_indep/dataplane_show.c.py:35
        continue ## src/hardware_indep/dataplane_show.c.py:36
    for dbg_action in table.actions: ## src/hardware_indep/dataplane_show.c.py:38
        aoname = dbg_action.action_object.name ## src/hardware_indep/dataplane_show.c.py:39
        generated_code += add_code('     void {}_show_params_{}(char* out, const action_{}_params_t* actpar) {{'.format(table.name, aoname, aoname), indent_level = 1, lineno = 39)
        params = dbg_action.expression.method.type.parameters.parameters ## src/hardware_indep/dataplane_show.c.py:41
        def make_value(value): ## src/hardware_indep/dataplane_show.c.py:43
            is_hex = value.base == 16 ## src/hardware_indep/dataplane_show.c.py:44
            split_places = 4 if is_hex else 3 ## src/hardware_indep/dataplane_show.c.py:45
            prefix = '0x' if is_hex else '' ## src/hardware_indep/dataplane_show.c.py:47
            val = f'{value.value:x}' if is_hex else f'{value.value}' ## src/hardware_indep/dataplane_show.c.py:48
            val = '_'.join(val[::-1][i:i+split_places] for i in range(0, len(val), split_places))[::-1] ## src/hardware_indep/dataplane_show.c.py:49
            return f'{prefix}{val}' ## src/hardware_indep/dataplane_show.c.py:50
        fmt_long_param = lambda sz: ('%02x%02x ' * (sz//2) + ('%02x' if sz%2 == 1 else '')).strip() ## src/hardware_indep/dataplane_show.c.py:52
        param_fmts = (f'" T4LIT(%d) "=" T4LIT(%0{(sz+3)//4}x,bytes) "' if sz <= 32 else f'(" T4LIT({fmt_long_param((sz+7)//8)},bytes) ")' for param in params for sz in [param.urtype.size]) ## src/hardware_indep/dataplane_show.c.py:54
        params_str = ", ".join((f'%s" T4LIT({param.name},field) "/" T4LIT({param.urtype.size}b) "={fmt}' for param, fmt in zip(params, param_fmts))) ## src/hardware_indep/dataplane_show.c.py:55
        if params_str != "": ## src/hardware_indep/dataplane_show.c.py:56
            params_str = f'({params_str})' ## src/hardware_indep/dataplane_show.c.py:57
        generated_code += add_code('         sprintf(out, "{}%s",'.format(params_str), indent_level = 2, lineno = 58)
        for param in params: ## src/hardware_indep/dataplane_show.c.py:60
            bytesz = (param.urtype.size+7)//8 ## src/hardware_indep/dataplane_show.c.py:61
            if param.urtype.size <= 32: ## src/hardware_indep/dataplane_show.c.py:62
                converter = '' ## src/hardware_indep/dataplane_show.c.py:63
                generated_code += add_code('               {} > 1 ? "ยง" : "", // maybe cpu->BE conversion'.format(bytesz), indent_level = 2, lineno = 64)
                generated_code += add_code('               {}(actpar->{}), // decimal'.format(converter, param.name), indent_level = 2, lineno = 65)
                generated_code += add_code('               {}(actpar->{}), // hex'.format(converter, param.name), indent_level = 2, lineno = 66)
            else: ## src/hardware_indep/dataplane_show.c.py:68
                generated_code += add_code("               \"\", // no cpu->BE conversion", indent_level = 2, lineno = 68)
                for i in range(bytesz): ## src/hardware_indep/dataplane_show.c.py:70
                    generated_code += add_code('               (actpar->{})[{}],'.format(param.name, i), indent_level = 2, lineno = 70)
        generated_code += add_code("         \"\");", indent_level = 2, lineno = 71)
        generated_code += add_code("     }", indent_level = 1, lineno = 72)
        generated_code += add_code("", indent_level = 1, lineno = 73)
generated_code += add_code("     void apply_show_hit_with_key_msg(bool hit, int key_size, int key_length_bytes, const char* matchtype_name,", indent_level = 1, lineno = 75)
generated_code += add_code("                                      const char* action_short_name, const char* params_txt, const char* table_info  KEYTXTPARAM, STDPARAMS) {", indent_level = 2, lineno = 76)
generated_code += add_code("         debug(\" %s Lookup on \" T4LIT(%s,table) \"/\" T4LIT(%s) \"/\" T4LIT(%dB) \": %s-> %s \" T4LIT(%s,action) \"%s%s\\n\",", indent_level = 2, lineno = 77)
generated_code += add_code("               hit ? T4LIT(++++,success) : T4LIT(XXXX,status),", indent_level = 2, lineno = 78)
generated_code += add_code("               table_info,", indent_level = 2, lineno = 79)
generated_code += add_code("               matchtype_name,", indent_level = 2, lineno = 80)
generated_code += add_code("               key_length_bytes,", indent_level = 2, lineno = 81)

generated_code += add_code("", indent_level = 2)
generated_code += add_code("               key_txt,", indent_level = 2, lineno = 83)
generated_code += add_code("               hit ? T4LIT(hit,success) : T4LIT(miss,status),", indent_level = 2, lineno = 84)
generated_code += add_code("               action_short_name,", indent_level = 2, lineno = 85)
generated_code += add_code("               params_txt,", indent_level = 2, lineno = 86)
generated_code += add_code("               hit ? \"\" : \" (default)\"", indent_level = 2, lineno = 87)
generated_code += add_code("               );", indent_level = 2, lineno = 88)
generated_code += add_code("     }", indent_level = 1, lineno = 89)

generated_code += add_code("", indent_level = 1)
for table, table_info in table_infos: ## src/hardware_indep/dataplane_show.c.py:92
    if 'key' not in table or table.key_bit_size == 0: ## src/hardware_indep/dataplane_show.c.py:93
        continue ## src/hardware_indep/dataplane_show.c.py:94
    generated_code += add_code('     void {}_apply_show_hit_with_key(bool hit, const ENTRY({})* entry  KEYTXTPARAM, STDPARAMS) {{'.format(table.name, table.name), indent_level = 1, lineno = 95)
    generated_code += add_code("         char params_txt[1024];", indent_level = 2, lineno = 96)
    for dbg_action in table.actions: ## src/hardware_indep/dataplane_show.c.py:98
        aoname = dbg_action.action_object.name ## src/hardware_indep/dataplane_show.c.py:99
        dbg_action_name = dbg_action.expression.method.path.name ## src/hardware_indep/dataplane_show.c.py:100
        generated_code += add_code('         if (!strcmp("{}", action_names[entry->id])) {{'.format(dbg_action_name), indent_level = 2, lineno = 100)
        generated_code += add_code('             {}_show_params_{}(params_txt, &(entry->params.{}_params));'.format(table.name, aoname, aoname), indent_level = 3, lineno = 101)
        generated_code += add_code('             apply_show_hit_with_key_msg(hit, table_config[TABLE_{}].entry.key_size,'.format(table.name), indent_level = 3, lineno = 102)
        generated_code += add_code('                                         {}, "{}", action_short_names[entry->id], params_txt, "{}"'.format(table.key_length_bytes, table.matchType.name, table_info), indent_level = 3, lineno = 103)
        generated_code += add_code("                                         KEYTXTPARAM_IN, STDPARAMS_IN);", indent_level = 3, lineno = 104)
        generated_code += add_code("         }", indent_level = 2, lineno = 105)
    generated_code += add_code("     }", indent_level = 1, lineno = 106)
    generated_code += add_code("", indent_level = 1, lineno = 107)
generated_code += add_code(" #endif", lineno = 108)

generated_code += add_code("")
for table, table_info in table_infos: ## src/hardware_indep/dataplane_show.c.py:111
    if 'key' in table and table.key_bit_size > 0: ## src/hardware_indep/dataplane_show.c.py:112
        continue ## src/hardware_indep/dataplane_show.c.py:113
    generated_code += add_code(' void {}_apply_show_hit(int action_id, STDPARAMS) {{'.format(table.name), lineno = 114)
    if 'key' not in table: ## src/hardware_indep/dataplane_show.c.py:116
        generated_code += add_code('     debug(" :::: Lookup on " T4LIT({},table) ", default action is " T4LIT(%s,action) "\\n", action_short_names[action_id]);'.format(table_info), indent_level = 1, lineno = 116)
    elif table.key_bit_size == 0: ## src/hardware_indep/dataplane_show.c.py:118
        if table.is_hidden or len(table.actions) == 1: ## src/hardware_indep/dataplane_show.c.py:119
            generated_code += add_code("     debug(\" ~~~~ Action \" T4LIT(%s,action) \"\\n\", action_short_names[action_id]);", indent_level = 1, lineno = 119)
        else: ## src/hardware_indep/dataplane_show.c.py:121
            generated_code += add_code('     debug(" " T4LIT(XXXX,status) " Lookup on " T4LIT({},table) ": " T4LIT(%s,action) " (default)\\n", action_short_names[action_id]);'.format(table_info), indent_level = 1, lineno = 121)
    generated_code += add_code(" }", lineno = 122)
    generated_code += add_code("", lineno = 123)
